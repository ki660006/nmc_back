<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="spdList.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAmA4AAAIB
        AAAAAQAAAAAbAAAAQ29weXJpZ2h0IChjKSAxOTk1IEZhclBvaW50AAAAAGgOAAAAAAcAR24AABEnAABA
        AAAAAQAAAAAAAQEAAAABAAAAAgAAAAAAAQEBAQIAAQEBAAAAAAADUuMLkY/OEZ3jAKoAS7hRAYEAAJAB
        kF8BAAaxvLiyw7wB////AMDAwAABAQEUAAAAFAAAAAEAAAAAAAAAAQEAAAEBAAAAAAAAAQMAAQ8Apbre
        ABAAAIASAACAng0AAAEEng0AAGUACAAAAAEAPwBVAAAAAgA5AwAAAAAAAAAAAACQAQAAAAAAAQAAAAAO
        AAAATVMgU2FucyBTZXJpZgB8/P//AAAAAAAAAACQAQAAAAAAAQAAAAAHAAAAsby4ssO8AAsADAAAAAAA
        AAEBABIADgAAAP///wAAAAAAFgARAAAAAAEA/Knx0k1iUD9FABIAAABxAAAAcgAAAHMAAABHAAcAAAAA
        UQA9AAAAAPQBAAAYAACAFwAAgDkDAAAAAAAAAAAAAJABAAAAAAABAAAAAA4AAABNUyBTYW5zIFNlcmlm
        AEoABwAAAA9PAA4AAADd/90A/////1AACAAAAAsIUwAIAAAAAABUAAgAAAAAAFcACgAAAAAAAABYABIA
        AAAAAAAAAAAAAAAAAABoABIAAAAAADMzMzMzM+M///9kAAgAAAAAABkADgAAABQAAAAUAAAAQgAIAAAA
        AAAFABYAAAD//////////////wAAAAAADQAQAAAA//////////8BACIAEgAAAP////8AAAAAAAAoQCUA
        FgAAAKW63gASAACAEAAAgBQAAIAwABIAAAD//////////wkAAABGABYAAAD/////////////////////
        SQAIAAAAAABVAAgAAAAAAFYADAAAAP////8AADAAEgAAAAAAAAD/////zAAAAAYAEgAAAAEAAAD2KFyP
        wvUIQFYADAAAAAEAAAAAACcArAQAAAEAAAD/////AwAiAAYABgAAAAAAAAAAAAAAAAAAAAAAAAAwAgAA
        MAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAADQAAAA0AAAABABgAAAAAAAgCAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////////////////////////////
        //////8AAAAAAAAAAAAAAAAA////////////////////////////////////AAAAAAAAAAAAAAAAAP//
        /////////////////////////////////wAAAAAAAAAAAAAAAAD/////////////////////////////
        //////8AAAAAAAAAAAAAAAAA////////////////////////////////////AAAAAAAAAAAAAAAAAP//
        /////////////////////////////////wAAAAAAAAAAAAAAAAD/////////////////////////////
        //////8AAAAAAAAAAAAAAAAA////////////////////////////////////AAAAAAAAAAAAAAAAAP//
        /////////////////////////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAANAAAA
        DQAAAAEAGAAAAAAACAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /////////////////////////////////wAAAAAAAAAAAAAAAAD///////////8AAAD/////////////
        //////8AAAAAAAAAAAAAAAAA////////AAAAAAAAAAAA////////////////AAAAAAAAAAAAAAAAAP//
        /wAAAAAAAAAAAAAAAAAAAP///////////wAAAAAAAAAAAAAAAAD///8AAAAAAAD///8AAAAAAAAAAAD/
        //////8AAAAAAAAAAAAAAAAA////AAAA////////////AAAAAAAAAAAA////AAAAAAAAAAAAAAAAAP//
        /////////////////////wAAAAAAAP///wAAAAAAAAAAAAAAAAD///////////////////////////8A
        AAD///8AAAAAAAAAAAAAAAAA////////////////////////////////////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAWwAOAAAAAQAAAGNoawAGABIAAAACAAAAAAAAAAAAKUBWAAwAAAACAAAAAABbABUA
        AAACAAAAdG5zanVic3VubwAGABIAAAADAAAAH4XrUbgeOEBWAAwAAAADAAAAAABbABAAAAADAAAAY29t
        bm0ABgASAAAABAAAAAAAAAAAgCJAVgAMAAAABAAAAAAAMAASAAAABAAAAP////8MAAAAWwAQAAAABAAA
        AHJlZ25vAAYAEgAAAAUAAAAAAAAAAAAiQFYADAAAAAUAAAAAAFsAEAAAAAUAAABwYXRubQAGABIAAAAG
        AAAAexSuR+F6FUBWAAwAAAAGAAAAAAAwABIAAAAGAAAA/////wwAAABbABEAAAAGAAAAc2V4YWdlAAYA
        EgAAAAcAAAAAAAAAAAAhQFYADAAAAAcAAAAAAFsAEAAAAAcAAABvcmRkdAAGABIAAAAIAAAAuB6F61E4
        IEBWAAwAAAAIAAAAAABbABMAAAAIAAAAZG9jdG9ybm0ABgASAAAACQAAAAAAAAAAgCBAVgAMAAAACQAA
        AAAAWwARAAAACQAAAGRlcHRubQAGABIAAAAKAAAAPgrXo3C9JUBWAAwAAAAKAAAAAABbABMAAAAKAAAA
        d2FyZHJvb20ABgASAAAACwAAAAAAAAAAgDpAVgAMAAAACwAAAAAAWwAUAAAACwAAAGNvbW5tX2NoZwAV
        ABIAAAAMAAAA/////wEAAABLAAsAAAAMAAAAAVYADAAAAAwAAAAAAFsAEAAAAAwAAABjb21jZAAVABIA
        AAANAAAA/////wEAAABLAAsAAAANAAAAAVYADAAAAA0AAAAAAFsAEQAAAA0AAABvd25nYm4AFQASAAAA
        DgAAAP////8BAAAASwALAAAADgAAAAFWAAwAAAAOAAAAAABbABAAAAAOAAAAaW9nYm4AFQASAAAADwAA
        AP////8BAAAASwALAAAADwAAAAFWAAwAAAAPAAAAAABbABAAAAAPAAAAZmtvY3MAFQASAAAAEAAAAP//
        //8BAAAASwALAAAAEAAAAAFWAAwAAAAQAAAAAABbABIAAAAQAAAAb3JkaW5mbwAVABIAAAARAAAA////
        /wEAAABLAAsAAAARAAAAAVYADAAAABEAAAAAAFsAFwAAABEAAABjb21vcmRjZF9jaGcAFQASAAAAEgAA
        AP////8BAAAASwALAAAAEgAAAAFWAAwAAAASAAAAAABbABQAAAASAAAAc3BjY2RfY2hnABUAEgAAABMA
        AAD/////AQAAAEsACwAAABMAAAABVgAMAAAAEwAAAAAAWwAVAAAAEwAAAHN1Z2FjZF9jaGcAFQASAAAA
        FAAAAP////8BAAAASwALAAAAFAAAAAFWAAwAAAAUAAAAAABbABIAAAAUAAAAdXNyZGVwdAAiABIAAAAA
        AAAAXI/C9SjcN0AwABIAAAD/////AAAAAMwAAAA1AAwAAAAAAAAAAAA4ABEAAAABAAAAAAAAAKHuADgA
        GwAAAAIAAAAAAAAAvPbH98GivPa5+MijADgAHgAAAAMAAAAAAAAAv/jDs7nmILy6utDBpsGmADgAFwAA
        AAQAAAAAAAAAte63z7n4yKMAOAATAAAABQAAAAAAAAC8urjtADgAGAAAAAYAAAAAAAAAvLq6sC+zqsDM
        ADgAFwAAAAcAAAAAAAAAw7O55sDPwNoAOAAXAAAACAAAAAAAAADB+LfhwMe75wA4ABUAAAAJAAAAAAAA
        AMH4t+Gw+gA4ABgAAAAKAAAAAAAAALq0tb8vurS9xwA4ABwAAAALAAAAAAAAALqvsOYgvLq60MGmwaYA
        OAAUAAAADAAAAAAAAABjb21jZAA4ABUAAAANAAAAAAAAAG93bmdibgA4ABQAAAAOAAAAAAAAAGlvZ2Ju
        ADgAFAAAAA8AAAAAAAAAZmtvY3MAOAAWAAAAEAAAAAAAAABvcmRpbmZvADgAGwAAABEAAAAAAAAAY29t
        b3JkY2RfY2hnADgAGAAAABIAAAAAAAAAc3BjY2RfY2hnADgAGQAAABMAAAAAAAAAc3VnYWNkX2NoZwA4
        ABYAAAAUAAAAAAAAAHVzcmRlcHQANQAMAAAAAQAAAAEAOAAQAAAAAQAAAAEAAAAxADAAEgAAAAIAAAAB
        AAAACQAAADgAHgAAAAIAAAABAAAAMDAwMDAwMDAtMC0wMDAwADAAEgAAAAQAAAABAAAADAAAADgAGQAA
        AAQAAAABAAAAMDAwMDAwMDAwMAAwABIAAAAHAAAAAQAAAAkAAAA4ABkAAAAHAAAAAQAAADAwMDAtMDAt
        MDAAOAAQAAAAAQAAAAIAAAAxAAEAAAABAAAAAQADAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        9AEAAAAADwAAAAAAAAAACw==
</value>
  </data>
</root>