Imports System.Windows.Forms
Imports System.IO
Imports System.Xml
Imports System.Data.OracleClient

Imports DBORA.DbProvider
Imports COMMON.CommFN
Imports COMMON.CommLogin.LOGIN
Imports COMMON.SVar

Public Class CGWEB_C

    Private m_DbCn As OracleConnection
    Private m_dt As New DataTable

    Public Sub New()

        Try
            COMMON.CommFN.MdiMain.DB_Active_YN = "Y"
            m_DbCn = GetDbConnection()

        Catch ex As Exception
            Throw (New Exception(ex.Message, ex))
        End Try

    End Sub

    Private Function fnGet_Data_Info(ByVal rsGbn As String) As DataTable
        Try
            Dim dbCmd As New OracleCommand
            Dim dbDA As OracleDataAdapter
            Dim dt As New DataTable

            Dim sSql As String = ""

            Select Case rsGbn.ToLower
                Case "patlist"
                    sSql = ""
                    sSql += "SELECT 'Z' rowgbn,"
                    sSql += "       ''  regno,"
                    sSql += "       ''  patinfo,"
                    sSql += "       ''  wardno,"
                    sSql += "       ''  wardnm,"
                    sSql += "       ''  roomno, "
                    sSql += "       ''  deptcd, "
                    sSql += "       ''  deptnm, "
                    sSql += "       ''  doctor,"
                    sSql += "       ''  doctornm,"
                    sSql += "       ''  owngbn,"
                    sSql += "       ''  spcflg,"
                    sSql += "       ''  iogbn,"
                    sSql += "       ''  partgbn,"
                    sSql += "       ''  ibday"
                    sSql += "  FROM DUAL"

                Case "ordlist"
                    sSql = ""
                    sSql += "SELECT 'Z' rowgbn,"
                    sSql += "       ''  regno,"
                    sSql += "       ''  patinfo, "
                    sSql += "       ''  fkocs,"
                    sSql += "       ''  orddt, "
                    sSql += "       ''  ordday, "
                    sSql += "       0   height,"
                    sSql += "       0   weight,"
                    sSql += "       ''  deptcd,"
                    sSql += "       ''  deptnm,"
                    sSql += "       ''  doctor,"
                    sSql += "       ''  doctornm, "
                    sSql += "       ''  iogbn, "
                    sSql += "       ''  wardno,"
                    sSql += "       ''  wardnm,"
                    sSql += "       ''  roomno,"
                    sSql += "       ''  remark,"
                    sSql += "       ''  remark_nrs,"
                    sSql += "       ''  ordcd, "
                    sSql += "       ''  spccd,"
                    sSql += "       ''  append_yn, "
                    sSql += "       ''  erflg,"
                    sSql += "       ''  hold_yn,"
                    sSql += "       ''  sunab_yn, "
                    sSql += "       ''  sunab_date,"
                    sSql += "       ''  hopeday, "
                    sSql += "       ''  entdt,"
                    sSql += "       ''  dc_yn,"
                    sSql += "       ''  owngbn,"
                    sSql += "       ''  liscmt,"
                    sSql += "       ''  testcd,"
                    sSql += "       ''  tnmd, "
                    sSql += "       ''  spcnmd,"
                    sSql += "       ''  bcclscd,"
                    sSql += "       ''  minspcvol,"
                    sSql += "       ''  exlabcd,"
                    sSql += "       ''  poctyn,"
                    sSql += "       ''  bconeyn,"
                    sSql += "       ''  seqtyn,"
                    sSql += "       ''  seqtmi,"
                    sSql += "       ''  cwarning,"
                    sSql += "       ''  tubecd,"
                    sSql += "       ''  bccnt,"
                    sSql += "       ''  spcnmbp,"
                    sSql += "       ''  tcdgbn,"
                    sSql += "       ''  tnmbp,"
                    sSql += "       ''  tubenmd,"
                    sSql += "       ''  tubenmbp,"
                    sSql += "       ''  tgrpnm,"
                    sSql += "       ''  dtestcd,"
                    sSql += "       ''  spcflg,"
                    sSql += "       ''  rstflg,"
                    sSql += "       ''  spcinfo,"
                    sSql += "       ''  sortslip,"
                    sSql += "       ''  sortl,"
                    sSql += "       ''  bccolor,"
                    sSql += "       ''  cprtgbn,"
                    sSql += "       ''  partgbn,"
                    sSql += "       ''  ordslip,"
                    sSql += "       ''  rsvdate"

                Case "patinfo"
                    sSql = ""
                    sSql += "SELECT 'Z' rowgbn,"
                    sSql += "       ''  regno,"
                    sSql += "       ''  patnm,"
                    sSql += "       ''  sex,"
                    sSql += "       ''  idno, "
                    sSql += "       ''  addr1, "
                    sSql += "       ''  idnol, "
                    sSql += "       ''  idnor,"
                    sSql += "       ''  wardroom"
                    sSql += "  FROM DUAL"

                Case "deptinfo"
                    sSql = ""
                    sSql += "SELECT 'Z' rowgbn,"
                    sSql += "       ''  deptcd,"
                    sSql += "       ''  deptnm"
                    sSql += "  FROM DUAL"

                Case "wardinfo"
                    sSql = ""
                    sSql += "SELECT 'Z' rowgbn,"
                    sSql += "       ''  wardno,"
                    sSql += "       ''  wardnm"
                    sSql += "  FROM DUAL"

                Case Else
                    Return Nothing
            End Select

            dbCmd.Connection = m_DbCn
            dbCmd.CommandType = CommandType.Text
            dbCmd.CommandText = sSql

            dbDA = New OracleDataAdapter(dbCmd)

            With dbDA
                .SelectCommand.Parameters.Clear()
            End With

            dt.Reset()
            dbDA.Fill(dt)

            Return dt

        Catch ex As Exception
            Throw (New Exception(ex.Message, ex))
        End Try

    End Function

    Private Function fnGet_XmlParsing(ByVal r_sr As System.IO.StreamReader) As String

        Dim sFn As String = "fnGet_XmlParsing"

        Dim xmlReader As XmlTextReader = New Xml.XmlTextReader(r_sr)
        Dim sValue As String = ""

        Try
            While xmlReader.Read()
                Select Case xmlReader.NodeType
                    Case XmlNodeType.Comment
                    Case XmlNodeType.Element
                        If xmlReader.Name.ToLower = "data" Then
                            If sValue <> "" Then
                                sValue += Chr(4)
                            End If
                        End If
                    Case XmlNodeType.EndEntity
                    Case XmlNodeType.Text
                        sValue += xmlReader.Value.Trim + Chr(3)
                    Case XmlNodeType.CDATA
                        sValue += xmlReader.Value.Trim + Chr(3)
                    Case Else
                End Select
            End While

        Catch ex As XmlException
            Throw (New Exception(ex.Message, ex))

        Finally
            xmlReader.Close()
        End Try

        Return sValue

    End Function

    Public Function fnGet_PatList(ByVal r_stu As STU_COLLINFO) As DataTable

        Dim sFn As String = "fnGet_PatList"

        Try
            Dim sURL = ""
            Dim wbReq As Net.WebRequest
            Dim wbRep As Net.WebResponse

            sURL += "http://" + PRG_CONST.SERVERIP + "/webapps/com/commonweb/xrw/.live?submit_id=TRLII00101&business_id=lis"
            sURL += "&instcd=" + PRG_CONST.SITECD + "&orddt1=" + r_stu.ORDDT1 + "&orddt2=" + r_stu.ORDDT2 + "&spcflg1=" + r_stu.SPCFLG1 + "&spcflg2=" + r_stu.SPCFLG2 + "&regno=" + r_stu.REGNO + "&"

            wbReq = Net.WebRequest.Create(sURL)
            wbRep = wbReq.GetResponse()

            Dim dt As DataTable = fnGet_Data_Info("patlist")
            Dim sr As System.IO.StreamReader = New System.IO.StreamReader(wbRep.GetResponseStream(), System.Text.Encoding.UTF8)
            Dim sRetVal = fnGet_XmlParsing(sr)

            m_dt = dt

            Dim sRow() As String = sRetVal.Split(Chr(4))

            For ix1 As Integer = 0 To sRow.Length - 1

                'Row 추가
                Dim dr As DataRow = m_dt.NewRow()

                Dim o_fdinfo() As System.Reflection.FieldInfo = dt.GetType().GetFields()

                For ix2 As Integer = 1 To o_fdinfo.Length
                    Dim sFdName As String = o_fdinfo(ix2 - 1).Name.ToLower
                    Dim sFdValue As String = ""

                    If ix2 = 1 Then
                        sFdValue = "D"
                    Else
                        sFdValue = sRow(ix1).Split(Chr(3))(ix2 - 1)
                    End If

                    If Not sFdValue = "" Then
                        dr.Item(sFdName) = sFdValue
                    End If
                Next

                m_dt.Rows.Add(dr)
            Next

            Dim sWhere As String = "rowgbn = 'D'"
            If r_stu.WARDCD <> "" Then sWhere += " AND wardno = '" + r_stu.WARDCD + "'"
            If r_stu.DEPTCD <> "" Then sWhere += " AND deptcd = '" + r_stu.DEPTCD + "'"
            If r_stu.PARTGBN <> "" Then sWhere += " AND partgbn = '" + r_stu.PARTGBN + "'"

            m_dt = Fn.ChangeToDataTable(m_dt.Select(sWhere, "regno"))

            Return m_dt

        Catch ex As Exception
            Throw (New Exception(ex.Message, ex))
        Finally
            COMMON.CommFN.MdiMain.DB_Active_YN = ""
            If m_DbCn.State = ConnectionState.Open Then m_DbCn.Close()
            m_DbCn.Dispose()
        End Try

    End Function

    Public Function fnGet_PatList_DB(ByVal r_stu As STU_COLLINFO) As DataTable

        Dim sFn As String = "fnGet_PatList_DB(Object) As  As DataTable"

        Try
            Dim sSql As String = ""
            Dim alPram As New ArrayList

            If r_stu.REGNO <> "" Then
                sSql += "pkg_ack_coll.pkg_get_patlist_regno"

                alPram.Add(New OracleParameter("rs_regno", r_stu.REGNO))
            Else
                sSql += "pkg_ack_coll.pkg_get_patlist"
            End If

            alPram.Add(New OracleParameter("rs_ord1", r_stu.ORDDT1.Replace("-", "")))
            alPram.Add(New OracleParameter("rs_ord2", r_stu.ORDDT2.Replace("-", "")))
            alPram.Add(New OracleParameter("rs_spcflg1", r_stu.SPCFLG1))
            alPram.Add(New OracleParameter("rs_spcflg2", r_stu.SPCFLG2))

            DbCommand()
            Dim dt As DataTable = DbExecuteQuery(sSql, alPram, False, m_DbCn)

            m_dt = fnGet_Data_Info("patlist")

            For ix1 As Integer = 0 To dt.Rows.Count - 1

                'Row 추가
                Dim dr As DataRow = m_dt.NewRow()

                Dim sFdName As String = "rowgbn"
                Dim sFdValue As String = "D"

                dr.Item(sFdName) = sFdValue

                For ix2 As Integer = 0 To dt.Columns.Count - 1
                    sFdName = dt.Columns(ix2).ColumnName
                    sFdValue = dt.Rows(ix1).Item(ix2).ToString

                    dr.Item(sFdName) = sFdValue
                Next

                m_dt.Rows.Add(dr)
            Next

            Dim sWhere As String = "rowgbn = 'D'"

            If r_stu.REGNO = "" Then sWhere += " AND iogbn IN ('O', 'S')"
            If r_stu.PARTGBN <> "" Then sWhere += " AND partgbn = '" + r_stu.PARTGBN + "'"

            If r_stu.WARDCD <> "" Then
                sWhere += " AND wardno = '" + r_stu.WARDCD + "'"
            ElseIf r_stu.DEPTCD <> "" Then
                Dim sDeptCds As String = ""

                If PRG_CONST.DEPT_HC.Contains(r_stu.DEPTCD) Then

                    For ix = 0 To PRG_CONST.DEPT_HC.Count - 1
                        If ix > 0 Then sDeptCds += ","
                        sDeptCds += PRG_CONST.DEPT_HC.Item(ix).ToString
                    Next

                    sWhere += " AND deptcd IN ('" + sDeptCds.Replace(",", "','") + "')"
                Else
                    sWhere += " AND deptcd = '" + r_stu.DEPTCD + "'"
                End If
            End If

            m_dt = Fn.ChangeToDataTable(m_dt.Select(sWhere, "patinfo"))

            Return m_dt

        Catch ex As Exception
            Throw (New Exception(ex.Message, ex))
        Finally
            COMMON.CommFN.MdiMain.DB_Active_YN = ""
            If m_DbCn.State = ConnectionState.Open Then m_DbCn.Close()
            m_DbCn.Dispose()
        End Try

    End Function

    Public Function fnGet_OrdList_DB(ByVal r_stu As STU_COLLINFO, ByVal rbQryMode As Boolean, ByVal rbHopeday As Boolean) As DataTable

        Dim sFn As String = "fnGet_OrdList_DB(Object) As  As DataTable"

        Try
            Dim sSql As String = ""
            Dim alPram As New ArrayList

            If r_stu.REGNO <> "" Then
                sSql += "pkg_ack_coll.pkg_get_ordlist_regno"

                alPram.Add(New OracleParameter("rs_regno", r_stu.REGNO))
            Else
                sSql += "pkg_ack_coll.pkg_get_ordlist"
            End If

            alPram.Add(New OracleParameter("rs_ord1", r_stu.ORDDT1.Replace("-", "")))
            alPram.Add(New OracleParameter("rs_ord2", r_stu.ORDDT2.Replace("-", "")))
            alPram.Add(New OracleParameter("rs_spcflg1", r_stu.SPCFLG1))
            alPram.Add(New OracleParameter("rs_spcflg2", r_stu.SPCFLG2))

            DbCommand()
            Dim dt As DataTable = DbExecuteQuery(sSql, alPram, False)

            m_dt = fnGet_Data_Info("ordlist")

            For ix1 As Integer = 0 To dt.Rows.Count - 1

                'Row 추가
                Dim dr As DataRow = m_dt.NewRow()

                Dim sFdName As String = "rowgbn"
                Dim sFdValue As String = "D"

                dr.Item(sFdName) = sFdValue

                For ix2 As Integer = 0 To dt.Columns.Count - 1
                    sFdName = dt.Columns(ix2).ColumnName
                    sFdValue = dt.Rows(ix1).Item(ix2).ToString

                    dr.Item(sFdName) = sFdValue
                Next

                m_dt.Rows.Add(dr)
            Next

            Dim sSort As String = ""

            If rbQryMode Then
                If r_stu.REGNO = "" Then
                    If r_stu.IOGBN = "I" Then
                        sSort = "patinfo, regno, bcno, roomno, ordday desc, deptcd, doctorcd, exlabcd, bcclscd, spccd, tubecd, poctyn, bconeyn, seqtmi, sortslip, sortl, testcd"
                    Else
                        sSort = "patinfo, regno, bcno, ordday desc, deptcd, doctorcd, exlabcd, bcclscd, spccd, tubecd, poctyn, bconeyn, seqtmi, sortslip, sortl, testcd"
                    End If
                Else
                    If r_stu.IOGBN = "I" Then
                        sSort = "bcno, roomno, ordday desc, patinfo, regno, deptcd, doctorcd, exlabcd, bcclscd, spccd, tubecd, poctyn, bconeyn, seqtmi, sortslip, sortl, testcd"
                    Else
                        sSort = "bcno, ordday desc, patinfo, regno, deptcd, doctorcd, exlabcd, bcclscd, spccd, tubecd, poctyn, bconeyn, seqtmi, sortslip, sortl, testcd"
                    End If
                End If
            Else
                If r_stu.REGNO = "" Then
                    If r_stu.IOGBN = "I" Then
                        sSort = "wardno, roomno, patinfo, regno, hopeday desc, deptcd, doctorcd, exlabcd, bcclscd, spccd, tubecd, poctyn, bconeyn, seqtmi, sortslip, sortl, testcd"
                    Else
                        sSort = "patinfo, regno, ordday desc, deptcd, doctorcd, exlabcd, bcclscd, spccd, tubecd, poctyn, bconeyn, seqtmi, sortslip, sortl, testcd"
                    End If
                Else
                    If rbHopeday Then
                        sSort = "hopeday desc, deptcd, patinfo, regno, doctorcd, exlabcd, bcclscd, spccd, tubecd, poctyn, bconeyn, seqtmi, sortslip, sortl, testcd, ordday"
                    Else
                        If r_stu.IOGBN = "I" Then
                            If r_stu.WARDCD = "" Then
                                sSort = "wardno, roomno, ordday desc, patinfo, regno, deptcd, doctorcd, exlabcd, bcclscd, spccd, tubecd, poctyn, bconeyn, seqtmi, sortslip, sortl, testcd"
                            Else
                                sSort = "roomno, ordday desc, patinfo, regno, deptcd, doctorcd, exlabcd, bcclscd, spccd, tubecd, poctyn, bconeyn, seqtmi, sortslip, sortl, testcd"
                            End If
                        Else
                            sSort = "ordday desc, deptcd, doctorcd, patinfo, regno, exlabcd, bcclscd, spccd, tubecd, poctyn, bconeyn, seqtmi, sortslip, sortl, testcd"
                        End If
                    End If
                End If
            End If

            Dim sWhere As String = "rowgbn = 'D'"

            If r_stu.PARTGBN <> "" Then sWhere += " AND partgbn = '" + r_stu.PARTGBN + "'"
            If r_stu.WARDCD <> "" Then
                sWhere += " AND wardno = '" + r_stu.WARDCD + "'"
            ElseIf r_stu.DEPTCD <> "" Then
                Dim sDeptCds As String = ""

                If PRG_CONST.DEPT_HC.Contains(r_stu.DEPTCD) Then

                    For ix = 0 To PRG_CONST.DEPT_HC.Count - 1
                        If ix > 0 Then sDeptCds += ","
                        sDeptCds += PRG_CONST.DEPT_HC.Item(ix).ToString
                    Next

                    sWhere += " AND deptcd IN ('" + sDeptCds.Replace(",", "','") + "')"
                Else
                    sWhere += " AND deptcd = '" + r_stu.DEPTCD + "'"
                End If
            End If

            m_dt = Fn.ChangeToDataTable(m_dt.Select(sWhere, sSort))

            Return m_dt

        Catch ex As Exception
            Throw (New Exception(ex.Message, ex))
        Finally
            COMMON.CommFN.MdiMain.DB_Active_YN = ""
            m_dt = Nothing
            If m_DbCn.State = ConnectionState.Open Then m_DbCn.Close()
            m_DbCn.Dispose()
        End Try

    End Function

    Public Function fnGet_PatInfo_ByNm(ByVal rsPatNm As String, ByVal rsIdnol As String, ByVal rsIdnoR As String) As DataTable

        Dim sFn As String = "fnGet_PatInfo_ByNm"

        Try
            Dim sURL = ""
            Dim wbReq As Net.WebRequest
            Dim wbRep As Net.WebResponse

            sURL += "http://" + PRG_CONST.SERVERIP + "/webapps/com/commonweb/xrw/.live?submit_id=TRLII00101&business_id=lis"
            sURL += "&instcd=" + PRG_CONST.SITECD + "&patnm=" + rsPatNm + "&idnol=" + rsIdnol + "&idnor=" + rsIdnoR + "&"

            wbReq = Net.WebRequest.Create(sURL)
            wbRep = wbReq.GetResponse()

            Dim dt As DataTable = fnGet_Data_Info("patinfo")
            Dim sr As System.IO.StreamReader = New System.IO.StreamReader(wbRep.GetResponseStream(), System.Text.Encoding.UTF8)
            Dim sRetVal = fnGet_XmlParsing(sr)

            m_dt = dt

            Dim sRow() As String = sRetVal.Split(Chr(4))

            For ix1 As Integer = 0 To sRow.Length - 1

                'Row 추가
                Dim dr As DataRow = m_dt.NewRow()

                Dim o_fdinfo() As System.Reflection.FieldInfo = dt.GetType().GetFields()

                For ix2 As Integer = 1 To o_fdinfo.Length
                    Dim sFdName As String = o_fdinfo(ix2 - 1).Name.ToLower
                    Dim sFdValue As String = ""

                    If ix2 = 1 Then
                        sFdValue = "D"
                    Else
                        sFdValue = sRow(ix1).Split(Chr(3))(ix2 - 1)
                    End If

                    If Not sFdValue = "" Then
                        dr.Item(sFdName) = sFdValue
                    End If
                Next

                m_dt.Rows.Add(dr)
            Next

            Dim sWhere As String = "rowgbn = 'D'"
            If rsIdnol <> "" Then sWhere += " AND idnol = '" + rsIdnol + "'"
            If rsIdnoR <> "" Then sWhere += " AND idnor = '" + rsIdnoR + "'"

            m_dt = Fn.ChangeToDataTable(dt.Select(sWhere))

            Return m_dt

        Catch ex As Exception
            Throw (New Exception(ex.Message, ex))
        Finally
            COMMON.CommFN.MdiMain.DB_Active_YN = ""
            If m_DbCn.State = ConnectionState.Open Then m_DbCn.Close()
            m_DbCn.Dispose()
        End Try

    End Function

    Public Function fnGet_DeptList(Optional ByVal rsDeptCd As String = "") As DataTable
        Dim sFn As String = "Public Shared Function fnGet_DeptList() As DataTable"

        Try
            Dim sURL = ""
            Dim wbReq As Net.WebRequest
            Dim wbRep As Net.WebResponse

            sURL += "http://" + PRG_CONST.SERVERIP + "/webapps/com/commonweb/xrw/.live?submit_id=TRLII00101&business_id=lis"
            sURL += "&instcd=" + PRG_CONST.SITECD + "&codegbn=dept&"

            wbReq = Net.WebRequest.Create(sURL)
            wbRep = wbReq.GetResponse()

            Dim dt As DataTable = fnGet_Data_Info("deptlist")
            Dim sr As System.IO.StreamReader = New System.IO.StreamReader(wbRep.GetResponseStream(), System.Text.Encoding.UTF8)
            Dim sRetVal = fnGet_XmlParsing(sr)

            m_dt = dt

            Dim sRow() As String = sRetVal.Split(Chr(4))

            For ix1 As Integer = 0 To sRow.Length - 1

                'Row 추가
                Dim dr As DataRow = m_dt.NewRow()

                Dim o_fdinfo() As System.Reflection.FieldInfo = dt.GetType().GetFields()

                For ix2 As Integer = 1 To o_fdinfo.Length
                    Dim sFdName As String = o_fdinfo(ix2 - 1).Name.ToLower
                    Dim sFdValue As String = ""

                    If ix2 = 1 Then
                        sFdValue = "D"
                    Else
                        sFdValue = sRow(ix1).Split(Chr(3))(ix2 - 1)
                    End If

                    If Not sFdValue = "" Then
                        dr.Item(sFdName) = sFdValue
                    End If
                Next

                m_dt.Rows.Add(dr)
            Next

            Dim sWhere As String = "rowgbn = 'D'"
            If rsDeptCd <> "" Then sWhere += " AND deptcd = '" + rsDeptCd + "'"

            m_dt = Fn.ChangeToDataTable(m_dt.Select(sWhere))

            Return m_dt

        Catch ex As Exception
            Throw (New Exception(ex.Message, ex))
        Finally
            COMMON.CommFN.MdiMain.DB_Active_YN = ""
            If m_DbCn.State = ConnectionState.Open Then m_DbCn.Close()
            m_DbCn.Dispose()
        End Try

    End Function

    Public Function fnGet_WardList(Optional ByVal rsWardCd As String = "") As DataTable
        Dim sFn As String = "Public Shared Function fnGet_DeptList() As DataTable"

        Try
            Dim sURL = ""
            Dim wbReq As Net.WebRequest
            Dim wbRep As Net.WebResponse

            sURL += "http://" + PRG_CONST.SERVERIP + "/webapps/com/commonweb/xrw/.live?submit_id=TRLII00101&business_id=lis"
            sURL += "&instcd=" + PRG_CONST.SITECD + "&codegbn=ward&"

            wbReq = Net.WebRequest.Create(sURL)
            wbRep = wbReq.GetResponse()

            Dim dt As DataTable = fnGet_Data_Info("deptlist")
            Dim sr As System.IO.StreamReader = New System.IO.StreamReader(wbRep.GetResponseStream(), System.Text.Encoding.UTF8)
            Dim sRetVal = fnGet_XmlParsing(sr)

            m_dt = dt

            Dim sRow() As String = sRetVal.Split(Chr(4))

            For ix1 As Integer = 0 To sRow.Length - 1

                'Row 추가
                Dim dr As DataRow = m_dt.NewRow()

                Dim o_fdinfo() As System.Reflection.FieldInfo = dt.GetType().GetFields()

                For ix2 As Integer = 1 To o_fdinfo.Length
                    Dim sFdName As String = o_fdinfo(ix2 - 1).Name.ToLower
                    Dim sFdValue As String = ""

                    If ix2 = 1 Then
                        sFdValue = "D"
                    Else
                        sFdValue = sRow(ix1).Split(Chr(3))(ix2 - 1)
                    End If

                    If Not sFdValue = "" Then
                        dr.Item(sFdName) = sFdValue
                    End If
                Next

                m_dt.Rows.Add(dr)
            Next

            Dim sWhere As String = "rowgbn = 'D'"
            If rsWardCd <> "" Then sWhere += " AND wardno = '" + rsWardCd + "'"

            m_dt = Fn.ChangeToDataTable(m_dt.Select(sWhere))

            Return m_dt

        Catch ex As Exception
            Throw (New Exception(ex.Message, ex))
        Finally
            COMMON.CommFN.MdiMain.DB_Active_YN = ""

            If m_DbCn.State = ConnectionState.Open Then m_DbCn.Close()
            m_DbCn.Dispose()
        End Try

    End Function

    Public Function ExecuteDo_One(ByVal r_stu As STU_COLLWEB, ByVal rbToColl As Boolean, ByVal rbToTk As Boolean) As String
        Dim sFn As String = "Public Function ExecuteDo_One(STU_COLLWEB, Boolean, Boolean) As String"

        Try

            Dim sURL = ""
            Dim wbReq As Net.WebRequest
            Dim wbRep As Net.WebResponse

            sURL += "http://" + PRG_CONST.SERVERIP + "/webapps/com/commonweb/xrw/.live?submit_id=TRLII00101&business_id=lis"
            sURL += "&instcd=" + PRG_CONST.SITECD + "&orddt1=" + r_stu.REGNO + "&orddt2=" + r_stu.ORDDT.Substring(0, 10).Replace("-", "") + "&spcflg1=" + r_stu.FKOCS + "&spcflg2=" + r_stu.TCLSCD + "&regno=" + r_stu.STATGBN + "&"

            wbReq = Net.WebRequest.Create(sURL)
            wbRep = wbReq.GetResponse()

            Dim dt As DataTable = fnGet_Data_Info("patlist")
            Dim sr As System.IO.StreamReader = New System.IO.StreamReader(wbRep.GetResponseStream(), System.Text.Encoding.UTF8)
            Dim sRetVal = fnGet_XmlParsing(sr)

            Dim sBcNo As String = ""

            Return sBcNo

        Catch ex As Exception
            Throw (New Exception(ex.Message + " @" + sFn, ex))
        Finally
            COMMON.CommFN.MdiMain.DB_Active_YN = ""
        End Try
    End Function


End Class

